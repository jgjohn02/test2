# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: service-configs
data:
  INVENTORY_EP: "http://inventory-svc:8080"
  PAYMENTS_EP: "http://payments-svc:8080"
  ACTIVE_ITEM_TYPE: "burgers"
  ITEMS: |
    items:
      - name: "BigBurger"
        type: "burgers"
        price: 5.50
        imageUrl: "usr/lib/images/bigburger.png"
        quantity: 200
        labels: [ "retail", "restaurant", "food" ]
      - name: "DoubleBurger"
        type: "burgers"
        price: 7.20
        imageUrl: "usr/lib/images/burgers.png"
        quantity: 200
        labels: [ "retail", "restaurant", "food" ]
      - name: "Shirt"
        type: "textile"
        price: 15.50
        imageUrl: "usr/lib/images/shirt.png"
        quantity: 50
        labels: [ "retail", "textile", "clothing" ]
      - name: "Short"
        type: "textile"
        price: 17.20
        imageUrl: "usr/lib/images/short.png"
        quantity: 20
        labels: [ "retail", "textile", "clothing" ]

---

# apiVersion: v1
# kind: Service
# metadata:
#   name: api-server-lb
# spec:
#   type: LoadBalancer
#   selector:
#     app: api-server
#   ports:
#   - name: http
#     port: 80
#     targetPort: 8080

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: api-server-svc
# spec:
#   type: ClusterIP
#   selector:
#     app: api-server
#   ports:
#   - name: http
#     port: 8080
#     targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: inventory-svc
spec:
  type: ClusterIP
  selector:
    app: inventory
  ports:
  - name: http
    port: 8080
    targetPort: 8080

---

# apiVersion: v1
# kind: Service
# metadata:
#   name: payments-svc
# spec:
#   type: ClusterIP
#   selector:
#     app: payments
#   ports:
#   - name: http
#     port: 8080
#     targetPort: 8080

# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: api-server
# spec:
#   selector:
#     matchLabels:
#       app: api-server
#   template:
#     metadata:
#       labels:
#         app: api-server
#     spec:
#       serviceAccountName: default
#       terminationGracePeriodSeconds: 5
#       containers:
#       - name: api-server
#         image: us-docker.pkg.dev/point-of-sale-ci/pos-images/api-server:v0.1.0
#         env:
#         - name: INVENTORY_EP
#           valueFrom:
#             configMapKeyRef:
#               name: service-configs
#               key: INVENTORY_EP
#         - name: PAYMENTS_EP
#           valueFrom:
#             configMapKeyRef:
#               name: service-configs
#               key: PAYMENTS_EP
#         resources:
#           requests:
#             cpu: 100m
#             memory: 512Mi
#           limits:
#             cpu: 500m
#             memory: 1Gi
#         readinessProbe:
#           httpGet:
#             path: /api/ready
#             port: 8080
#           initialDelaySeconds: 60
#           periodSeconds: 5
#           timeoutSeconds: 10
#         livenessProbe:
#           httpGet:
#             path: /api/healthy
#             port: 8080
#           initialDelaySeconds: 120
#           periodSeconds: 5
#           timeoutSeconds: 10

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory
spec:
  selector:
    matchLabels:
      app: inventory
  template:
    metadata:
      labels:
        app: inventory
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: inventory
        image: us-docker.pkg.dev/point-of-sale-ci/pos-images/inventory:v0.1.0
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: spring-profile
              key: SPRING_PROFILES_ACTIVE
        - name: ACTIVE_ITEM_TYPE
          valueFrom:
            configMapKeyRef:
              name: service-configs
              key: ACTIVE_ITEM_TYPE
        - name: ITEMS
          valueFrom:
            configMapKeyRef:
              name: service-configs
              key: ITEMS
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthy
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 5
          timeoutSeconds: 10

---

kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: mysql-db
  labels:
    app: mysql-db
    tier: db
spec:
  serviceName: mysql-db
  replicas: 1
  selector:
    matchLabels:
      app: mysql-db
      tier: db
  template:
    metadata:
      labels:
        app: mysql-db
        tier: db
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 10
      containers:
      - name: mysql-db
        image: mysql:8.0.28-oracle
        envFrom:
        - configMapRef:
            name: mysql-db-config
        ports:
        - name: mysqldb
          protocol: TCP
          containerPort: 3306
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - name: mysqldb
          mountPath: /var/lib/mysql
      volumes:
      - name: mysqldb
        emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-db
  labels:
    app: mysql-db
    tier: db
spec:
  clusterIP: None
  ports:
  - port: 3306
    name: tcp
    targetPort: 3306
    protocol: TCP
  selector:
    app: mysql-db
    tier: db

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-db-config
  labels:
    app: mysql-db
data:
  MYSQL_HOST: mysql-db
  MYSQL_DATABASE: pos_db
  MYSQL_USER: demouser
  MYSQL_PASSWORD: demopassword
  MYSQL_ROOT_PASSWORD: totoallysafepassword
  MYSQL_DB_URI: jdbc:mysql://demouser:demopassword@mysql-db:3306/pos_db

# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: payments
# spec:
#   selector:
#     matchLabels:
#       app: payments
#   template:
#     metadata:
#       labels:
#         app: payments
#     spec:
#       serviceAccountName: default
#       terminationGracePeriodSeconds: 5
#       containers:
#       - name: payments
#         image: us-docker.pkg.dev/point-of-sale-ci/pos-images/payments:v0.1.0
#         env:
#         - name: SPRING_PROFILES_ACTIVE
#           valueFrom:
#             configMapKeyRef:
#               name: spring-profile
#               key: SPRING_PROFILES_ACTIVE
#         resources:
#           requests:
#             cpu: 100m
#             memory: 512Mi
#           limits:
#             cpu: 500m
#             memory: 1Gi
#         readinessProbe:
#           httpGet:
#             path: /ready
#             port: 8080
#           initialDelaySeconds: 60
#           periodSeconds: 5
#           timeoutSeconds: 10
#         livenessProbe:
#           httpGet:
#             path: /healthy
#             port: 8080
#           initialDelaySeconds: 120
#           periodSeconds: 5
#           timeoutSeconds: 10

---

# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: spring-profile
# data:
#   SPRING_PROFILES_ACTIVE: "INMEMORY"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: spring-profile
data:
  SPRING_PROFILES_ACTIVE: "DATABASE"
